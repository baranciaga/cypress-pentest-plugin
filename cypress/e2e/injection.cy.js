describe('execute sqlmap in different ways', () => {
    beforeEach(() => {
        cy.visit('/#/login'); // #/form/new-
    });
    it('should test an endpoint for sql injection', () => {
        // modify the request!!!
        cy.intercept('POST', 'http://localhost:3000/rest/user/login').as('interceptedRequest');
        cy.get('#email').type("' or 1=1--");
        cy.get('#password').type('a');
        cy.get('#loginButton').click();
        // cy.wait('@interceptedLogin') // waits for login request to be intercepted
        // cy.get('input.my-cool-formclass').sho
        cy.wait('@interceptedRequest').then((request) => {
            console.log(request);
            const method = 'POST';
            const postParams = ['email', 'password'];
            // const expectedStatus = 200
            const endpoint = 'http://127.0.0.1:3000/rest/user/login/';
            cy.checkEndpoint(request, method, endpoint, postParams);
            cy.task('checkEndpoint', { request, method, endpoint, postParams });
            // cy.task('AnalyseRequests', request)
            // method, params/body
        });
    });
});
