import { defineConfig } from 'cypress';
import { checkEndpoint, sqlMap, secondOrderAttack, headerSQLi, spawnShell, reflectedXSS, csrf } from "./src/index.ts";

export default defineConfig({
    e2e: {
        setupNodeEvents(on, config) {
            const version = config.env.VERSION || 'local';
            const urls = {
                local: "http://localhost:3000",
                dev: "https://dev.example.com",
                test: "https://test.example.com",
                stage: "https://stage.example.com",
                prod: "https://example.com"
            }
            config.baseUrl = urls[version];
            // configure plugins here.
            // Task event listener triggers function calls.
            on('task', {
                checkEndpoint({ request, injectable }) {
                    return checkEndpoint(request, injectable);
                },
                sqlMap({ route, args }) {
                    return sqlMap(route, args);
                },
                headerSQLi({request, headers}) {
                    return headerSQLi({request, headers});
                },
                reflectedXSS({request}) {
                    return reflectedXSS(request);
                },
                csrf({request}) {
                    return csrf(request);
                }
            });
            return config;
        },
        // baseUrl: 'http://localhost:3000',

    }
})